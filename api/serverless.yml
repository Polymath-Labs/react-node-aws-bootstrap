service:
  name: polymathlabs-api

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-plugin-split-stacks
  - serverless-dotenv-plugin

package:
  #  individually: true
  exclude:
    - ".*/**"
    - "*/**/.js.map"
    - ./node_modules/**
    - ./nyc_output/**
    - ./generators/**
    - ./serverless/**
    - ./tests/**

provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:REGION, 'us-east-1'}
  stage: ${env:STAGE, 'dev'}
  versionFunctions: false
  role: LambdaRole
  logs:
    websocket:
      level: ERROR
  apiGateway:
    minimumCompressionSize: 0
  tracing:
    apiGateway: true
    lambda: true
  environment:
    # Logger level control
    LOG_LEVEL: ${env:LOG_LEVEL, 'debug'}

    DOCUMENT_DB_URI:
      Fn::Join:
        - ""
        - - "mongodb://"
          - !Join ['', ['{{resolve:secretsmanager:', '${env:AWS_SECRET_NAME}', ':SecretString:DocumentDBUsername}}']]
          - ':'
          - !Join ['', ['{{resolve:secretsmanager:', '${env:AWS_SECRET_NAME}', ':SecretString:DocumentDBPassword}}']]
          - '@'
          - Fn::ImportValue: '${env:PROJECT_NAME}-documentDB-endpoint-${self:provider.stage}'
          - ":27017/projectDB?replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"

custom:
  config:
    cors: true
    vpc:
      securityGroupIds:
        - !ImportValue security-group-id-${self:provider.stage}
      subnetIds:
        - !ImportValue subnet1-id-${self:provider.stage}
        - !ImportValue subnet2-id-${self:provider.stage}
        - !ImportValue subnet3-id-${self:provider.stage}

  webpack:
    includeModules: true

  serverless-offline:
    httpPort: ${env:API_PORT, 3001}
    host: 0.0.0.0
    useChildProcesses: true

  splitStacks:
    nestedStackCount: 20
    perFunction: true
    perType: trues
    perGroupFunction: true

functions:
  - ${file(./serverless/functions_blogs.yml)}
  # FUNCTIONS_PLACEHOLDER

resources:
  - ${file(./serverless/resources_lambda_role.yml)}

  - Outputs:
      ServiceEndpoint:
        Export:
          Name: ${env:PROJECT_NAME}-api-${self:provider.stage}
